--[[
    Sentence Rayfield Interface Suite
    Advanced GUI Library with Modern Dark Design
    Based on Rayfield but completely redesigned
    
    Created by: Assistant
    Version: 1.0.0
]]

local SentenceRayfield = {}

-- Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")
local CoreGui = game:GetService("CoreGui")

-- Variables
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local Viewport = workspace.CurrentCamera.ViewportSize

-- Create ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "SentenceRayfield"
ScreenGui.Parent = CoreGui
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Modern Dark Theme
local Theme = {
    Background = Color3.fromRGB(15, 15, 20),
    Surface = Color3.fromRGB(25, 25, 35),
    Surface2 = Color3.fromRGB(35, 35, 45),
    Primary = Color3.fromRGB(100, 150, 255),
    Secondary = Color3.fromRGB(150, 100, 255),
    Accent = Color3.fromRGB(0, 255, 150),
    Text = Color3.fromRGB(255, 255, 255),
    TextSecondary = Color3.fromRGB(180, 180, 190),
    TextDim = Color3.fromRGB(120, 120, 130),
    Border = Color3.fromRGB(60, 60, 80),
    BorderLight = Color3.fromRGB(80, 80, 100),
    Success = Color3.fromRGB(0, 255, 100),
    Warning = Color3.fromRGB(255, 200, 0),
    Error = Color3.fromRGB(255, 80, 80),
    Shadow = Color3.fromRGB(0, 0, 0)
}

-- Utility Functions
local function CreateCorner(parent, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 8)
    corner.Parent = parent
    return corner
end

local function CreateStroke(parent, color, thickness)
    local stroke = Instance.new("UIStroke")
    stroke.Color = color or Theme.Border
    stroke.Thickness = thickness or 1
    stroke.Parent = parent
    return stroke
end

local function CreateShadow(parent, size, transparency)
    local shadow = Instance.new("ImageLabel")
    shadow.Name = "Shadow"
    shadow.Size = UDim2.new(1, size or 20, 1, size or 20)
    shadow.Position = UDim2.new(0, -(size or 20)/2, 0, -(size or 20)/2)
    shadow.BackgroundTransparency = 1
    shadow.Image = "rbxassetid://6014261993"
    shadow.ImageColor3 = Theme.Shadow
    shadow.ImageTransparency = transparency or 0.7
    shadow.ZIndex = parent.ZIndex - 1
    shadow.Parent = parent.Parent
    return shadow
end

local function CreateGradient(parent, colors, rotation)
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new(colors)
    gradient.Rotation = rotation or 0
    gradient.Parent = parent
    return gradient
end

local function TweenObject(object, tweenInfo, properties, callback)
    local tween = TweenService:Create(object, tweenInfo, properties)
    tween:Play()
    if callback then
        tween.Completed:Connect(callback)
    end
    return tween
end

-- Main Frame
local Main = Instance.new("Frame")
Main.Name = "Main"
Main.Size = UDim2.new(0, 800, 0, 600)
Main.Position = UDim2.new(0.5, -400, 0.5, -300)
Main.BackgroundColor3 = Theme.Background
Main.BorderSizePixel = 0
Main.Parent = ScreenGui
Main.ClipsDescendants = true

CreateCorner(Main, 12)
CreateStroke(Main, Theme.BorderLight, 2)
CreateShadow(Main, 30, 0.8)

-- Gradient Background
CreateGradient(Main, {
    ColorSequenceKeypoint.new(0, Color3.fromRGB(20, 20, 30)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(15, 15, 25))
}, 45)

-- Title Bar
local TitleBar = Instance.new("Frame")
TitleBar.Name = "TitleBar"
TitleBar.Size = UDim2.new(1, 0, 0, 60)
TitleBar.Position = UDim2.new(0, 0, 0, 0)
TitleBar.BackgroundColor3 = Theme.Surface
TitleBar.BorderSizePixel = 0
TitleBar.Parent = Main

CreateCorner(TitleBar, 12)
CreateGradient(TitleBar, {
    ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 40)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(25, 25, 35))
}, 90)

-- Fix corners overlap
local TitleBarFix = Instance.new("Frame")
TitleBarFix.Size = UDim2.new(1, 0, 0, 12)
TitleBarFix.Position = UDim2.new(0, 0, 1, -12)
TitleBarFix.BackgroundColor3 = Theme.Surface
TitleBarFix.BorderSizePixel = 0
TitleBarFix.Parent = TitleBar

-- Title
local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Size = UDim2.new(1, -100, 1, 0)
Title.Position = UDim2.new(0, 20, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "Sentence Rayfield"
Title.TextColor3 = Theme.Text
Title.TextScaled = true
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold)
Title.Parent = TitleBar

-- Close Button
local CloseButton = Instance.new("TextButton")
CloseButton.Name = "CloseButton"
CloseButton.Size = UDim2.new(0, 40, 0, 40)
CloseButton.Position = UDim2.new(1, -50, 0.5, -20)
CloseButton.BackgroundColor3 = Theme.Error
CloseButton.BorderSizePixel = 0
CloseButton.Text = "×"
CloseButton.TextColor3 = Theme.Text
CloseButton.TextScaled = true
CloseButton.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold)
CloseButton.Parent = TitleBar

CreateCorner(CloseButton, 20)

-- Minimize Button
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Name = "MinimizeButton"
MinimizeButton.Size = UDim2.new(0, 40, 0, 40)
MinimizeButton.Position = UDim2.new(1, -100, 0.5, -20)
MinimizeButton.BackgroundColor3 = Theme.Warning
MinimizeButton.BorderSizePixel = 0
MinimizeButton.Text = "−"
MinimizeButton.TextColor3 = Theme.Text
MinimizeButton.TextScaled = true
MinimizeButton.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold)
MinimizeButton.Parent = TitleBar

CreateCorner(MinimizeButton, 20)

-- Content Container
local ContentContainer = Instance.new("Frame")
ContentContainer.Name = "ContentContainer"
ContentContainer.Size = UDim2.new(1, 0, 1, -60)
ContentContainer.Position = UDim2.new(0, 0, 0, 60)
ContentContainer.BackgroundTransparency = 1
ContentContainer.Parent = Main

-- Sidebar
local Sidebar = Instance.new("Frame")
Sidebar.Name = "Sidebar"
Sidebar.Size = UDim2.new(0, 200, 1, 0)
Sidebar.Position = UDim2.new(0, 0, 0, 0)
Sidebar.BackgroundColor3 = Theme.Surface
Sidebar.BorderSizePixel = 0
Sidebar.Parent = ContentContainer

CreateStroke(Sidebar, Theme.Border, 1)

-- Sidebar Gradient
CreateGradient(Sidebar, {
    ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 40)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(20, 20, 30))
}, 180)

-- Tab Container
local TabContainer = Instance.new("ScrollingFrame")
TabContainer.Name = "TabContainer"
TabContainer.Size = UDim2.new(1, 0, 1, -20)
TabContainer.Position = UDim2.new(0, 0, 0, 10)
TabContainer.BackgroundTransparency = 1
TabContainer.ScrollBarThickness = 4
TabContainer.ScrollBarImageColor3 = Theme.Primary
TabContainer.BorderSizePixel = 0
TabContainer.Parent = Sidebar

local TabLayout = Instance.new("UIListLayout")
TabLayout.SortOrder = Enum.SortOrder.LayoutOrder
TabLayout.Padding = UDim.new(0, 5)
TabLayout.Parent = TabContainer

-- Content Area
local ContentArea = Instance.new("Frame")
ContentArea.Name = "ContentArea"
ContentArea.Size = UDim2.new(1, -200, 1, 0)
ContentArea.Position = UDim2.new(0, 200, 0, 0)
ContentArea.BackgroundColor3 = Theme.Background
ContentArea.BorderSizePixel = 0
ContentArea.Parent = ContentContainer

-- Pages Container
local PagesContainer = Instance.new("Frame")
PagesContainer.Name = "PagesContainer"
PagesContainer.Size = UDim2.new(1, 0, 1, 0)
PagesContainer.Position = UDim2.new(0, 0, 0, 0)
PagesContainer.BackgroundTransparency = 1
PagesContainer.Parent = ContentArea

-- Current Tab Indicator
local currentTab = nil
local tabs = {}

-- Notification System
local NotificationContainer = Instance.new("Frame")
NotificationContainer.Name = "Notifications"
NotificationContainer.Size = UDim2.new(0, 300, 1, 0)
NotificationContainer.Position = UDim2.new(1, -320, 0, 20)
NotificationContainer.BackgroundTransparency = 1
NotificationContainer.Parent = ScreenGui

local NotificationLayout = Instance.new("UIListLayout")
NotificationLayout.SortOrder = Enum.SortOrder.LayoutOrder
NotificationLayout.Padding = UDim.new(0, 10)
NotificationLayout.VerticalAlignment = Enum.VerticalAlignment.Bottom
NotificationLayout.Parent = NotificationContainer

-- Drag Functionality
local dragging = false
local dragStart = nil
local startPos = nil

TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = Main.Position
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        Main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, 
                                 startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

-- Button Hover Effects
local function AddHoverEffect(button, hoverColor, originalColor)
    button.MouseEnter:Connect(function()
        TweenObject(button, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {BackgroundColor3 = hoverColor})
    end)
    
    button.MouseLeave:Connect(function()
        TweenObject(button, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {BackgroundColor3 = originalColor})
    end)
end

AddHoverEffect(CloseButton, Color3.fromRGB(255, 100, 100), Theme.Error)
AddHoverEffect(MinimizeButton, Color3.fromRGB(255, 220, 50), Theme.Warning)

-- Window Functions
local Window = {}
local minimized = false

function Window:SetTitle(title)
    Title.Text = title
end

function Window:CreateTab(config)
    local tabName = config.Name or "New Tab"
    local tabIcon = config.Icon or ""
    
    -- Tab Button
    local TabButton = Instance.new("TextButton")
    TabButton.Name = "Tab_" .. tabName
    TabButton.Size = UDim2.new(1, -10, 0, 45)
    TabButton.BackgroundColor3 = Theme.Surface2
    TabButton.BorderSizePixel = 0
    TabButton.Text = ""
    TabButton.Parent = TabContainer
    
    CreateCorner(TabButton, 8)
    
    -- Tab Icon
    local TabIcon = Instance.new("TextLabel")
    TabIcon.Size = UDim2.new(0, 30, 0, 30)
    TabIcon.Position = UDim2.new(0, 10, 0.5, -15)
    TabIcon.BackgroundTransparency = 1
    TabIcon.Text = tabIcon
    TabIcon.TextColor3 = Theme.TextSecondary
    TabIcon.TextScaled = true
    TabIcon.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json")
    TabIcon.Parent = TabButton
    
    -- Tab Text
    local TabText = Instance.new("TextLabel")
    TabText.Size = UDim2.new(1, -50, 1, 0)
    TabText.Position = UDim2.new(0, 45, 0, 0)
    TabText.BackgroundTransparency = 1
    TabText.Text = tabName
    TabText.TextColor3 = Theme.TextSecondary
    TabText.TextScaled = true
    TabText.TextXAlignment = Enum.TextXAlignment.Left
    TabText.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium)
    TabText.Parent = TabButton
    
    -- Tab Page
    local TabPage = Instance.new("ScrollingFrame")
    TabPage.Name = "Page_" .. tabName
    TabPage.Size = UDim2.new(1, -20, 1, -20)
    TabPage.Position = UDim2.new(0, 10, 0, 10)
    TabPage.BackgroundTransparency = 1
    TabPage.ScrollBarThickness = 6
    TabPage.ScrollBarImageColor3 = Theme.Primary
    TabPage.BorderSizePixel = 0
    TabPage.Visible = false
    TabPage.Parent = PagesContainer
    
    local PageLayout = Instance.new("UIListLayout")
    PageLayout.SortOrder = Enum.SortOrder.LayoutOrder
    PageLayout.Padding = UDim.new(0, 10)
    PageLayout.Parent = TabPage
    
    -- Tab functionality
    local function SelectTab()
        -- Deselect all tabs
        for _, tab in pairs(tabs) do
            tab.button.BackgroundColor3 = Theme.Surface2
            tab.icon.TextColor3 = Theme.TextSecondary
            tab.text.TextColor3 = Theme.TextSecondary
            tab.page.Visible = false
        end
        
        -- Select this tab
        TabButton.BackgroundColor3 = Theme.Primary
        TabIcon.TextColor3 = Theme.Text
        TabText.TextColor3 = Theme.Text
        TabPage.Visible = true
        currentTab = tabName
    end
    
    TabButton.MouseButton1Click:Connect(SelectTab)
    
    -- Store tab data
    tabs[tabName] = {
        button = TabButton,
        icon = TabIcon,
        text = TabText,
        page = TabPage,
        select = SelectTab
    }
    
    -- Select first tab
    if not currentTab then
        SelectTab()
    end
    
    -- Update layout
    TabContainer.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
    
    -- Tab object
    local Tab = {}
    
    function Tab:CreateSection(name)
        local Section = Instance.new("Frame")
        Section.Name = "Section_" .. name
        Section.Size = UDim2.new(1, 0, 0, 40)
        Section.BackgroundColor3 = Theme.Surface
        Section.BorderSizePixel = 0
        Section.Parent = TabPage
        
        CreateCorner(Section, 8)
        
        local SectionTitle = Instance.new("TextLabel")
        SectionTitle.Size = UDim2.new(1, -20, 1, 0)
        SectionTitle.Position = UDim2.new(0, 20, 0, 0)
        SectionTitle.BackgroundTransparency = 1
        SectionTitle.Text = name
        SectionTitle.TextColor3 = Theme.Text
        SectionTitle.TextScaled = true
        SectionTitle.TextXAlignment = Enum.TextXAlignment.Left
        SectionTitle.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold)
        SectionTitle.Parent = Section
        
        TabPage.CanvasSize = UDim2.new(0, 0, 0, PageLayout.AbsoluteContentSize.Y)
        
        return Section
    end
    
    function Tab:CreateButton(config)
        local Button = Instance.new("TextButton")
        Button.Name = "Button_" .. (config.Name or "Button")
        Button.Size = UDim2.new(1, 0, 0, 50)
        Button.BackgroundColor3 = Theme.Surface
        Button.BorderSizePixel = 0
        Button.Text = ""
        Button.Parent = TabPage
        
        CreateCorner(Button, 8)
        CreateStroke(Button, Theme.Border, 1)
        
        local ButtonText = Instance.new("TextLabel")
        ButtonText.Size = UDim2.new(1, -40, 1, 0)
        ButtonText.Position = UDim2.new(0, 20, 0, 0)
        ButtonText.BackgroundTransparency = 1
        ButtonText.Text = config.Name or "Button"
        ButtonText.TextColor3 = Theme.Text
        ButtonText.TextScaled = true
        ButtonText.TextXAlignment = Enum.TextXAlignment.Left
        ButtonText.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium)
        ButtonText.Parent = Button
        
        -- Hover effect
        AddHoverEffect(Button, Theme.Surface2, Theme.Surface)
        
        -- Click handler
        if config.Callback then
            Button.MouseButton1Click:Connect(config.Callback)
        end
        
        TabPage.CanvasSize = UDim2.new(0, 0, 0, PageLayout.AbsoluteContentSize.Y)
        
        return Button
    end
    
    function Tab:CreateToggle(config)
        local Toggle = Instance.new("Frame")
        Toggle.Name = "Toggle_" .. (config.Name or "Toggle")
        Toggle.Size = UDim2.new(1, 0, 0, 50)
        Toggle.BackgroundColor3 = Theme.Surface
        Toggle.BorderSizePixel = 0
        Toggle.Parent = TabPage
        
        CreateCorner(Toggle, 8)
        CreateStroke(Toggle, Theme.Border, 1)
        
        local ToggleText = Instance.new("TextLabel")
        ToggleText.Size = UDim2.new(1, -80, 1, 0)
        ToggleText.Position = UDim2.new(0, 20, 0, 0)
        ToggleText.BackgroundTransparency = 1
        ToggleText.Text = config.Name or "Toggle"
        ToggleText.TextColor3 = Theme.Text
        ToggleText.TextScaled = true
        ToggleText.TextXAlignment = Enum.TextXAlignment.Left
        ToggleText.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium)
        ToggleText.Parent = Toggle
        
        local ToggleButton = Instance.new("TextButton")
        ToggleButton.Size = UDim2.new(0, 50, 0, 25)
        ToggleButton.Position = UDim2.new(1, -65, 0.5, -12.5)
        ToggleButton.BackgroundColor3 = Theme.Surface2
        ToggleButton.BorderSizePixel = 0
        ToggleButton.Text = ""
        ToggleButton.Parent = Toggle
        
        CreateCorner(ToggleButton, 12)
        CreateStroke(ToggleButton, Theme.Border, 1)
        
        local ToggleIndicator = Instance.new("Frame")
        ToggleIndicator.Size = UDim2.new(0, 20, 0, 20)
        ToggleIndicator.Position = UDim2.new(0, 2.5, 0.5, -10)
        ToggleIndicator.BackgroundColor3 = Theme.TextDim
        ToggleIndicator.BorderSizePixel = 0
        ToggleIndicator.Parent = ToggleButton
        
        CreateCorner(ToggleIndicator, 10)
        
        local toggled = config.Default or false
        
        local function UpdateToggle()
            if toggled then
                TweenObject(ToggleIndicator, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
                    Position = UDim2.new(1, -22.5, 0.5, -10),
                    BackgroundColor3 = Theme.Primary
                })
                TweenObject(ToggleButton, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
                    BackgroundColor3 = Theme.Primary
                })
            else
                TweenObject(ToggleIndicator, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
                    Position = UDim2.new(0, 2.5, 0.5, -10),
                    BackgroundColor3 = Theme.TextDim
                })
                TweenObject(ToggleButton, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
                    BackgroundColor3 = Theme.Surface2
                })
            end
            
            if config.Callback then
                config.Callback(toggled)
            end
        end
        
        ToggleButton.MouseButton1Click:Connect(function()
            toggled = not toggled
            UpdateToggle()
        end)
        
        UpdateToggle()
        
        TabPage.CanvasSize = UDim2.new(0, 0, 0, PageLayout.AbsoluteContentSize.Y)
        
        return Toggle
    end
    
    function Tab:CreateSlider(config)
        local Slider = Instance.new("Frame")
        Slider.Name = "Slider_" .. (config.Name or "Slider")
        Slider.Size = UDim2.new(1, 0, 0, 70)
        Slider.BackgroundColor3 = Theme.Surface
        Slider.BorderSizePixel = 0
        Slider.Parent = TabPage
        
        CreateCorner(Slider, 8)
        CreateStroke(Slider, Theme.Border, 1)
        
        local SliderText = Instance.new("TextLabel")
        SliderText.Size = UDim2.new(0.7, 0, 0, 25)
        SliderText.Position = UDim2.new(0, 20, 0, 10)
        SliderText.BackgroundTransparency = 1
        SliderText.Text = config.Name or "Slider"
        SliderText.TextColor3 = Theme.Text
        SliderText.TextScaled = true
        SliderText.TextXAlignment = Enum.TextXAlignment.Left
        SliderText.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium)
        SliderText.Parent = Slider
        
        local SliderValue = Instance.new("TextLabel")
        SliderValue.Size = UDim2.new(0.3, -20, 0, 25)
        SliderValue.Position = UDim2.new(0.7, 0, 0, 10)
        SliderValue.BackgroundTransparency = 1
        SliderValue.Text = tostring(config.Min or 0)
        SliderValue.TextColor3 = Theme.Primary
        SliderValue.TextScaled = true
        SliderValue.TextXAlignment = Enum.TextXAlignment.Right
        SliderValue.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold)
        SliderValue.Parent = Slider
        
        local SliderTrack = Instance.new("Frame")
        SliderTrack.Size = UDim2.new(1, -40, 0, 6)
        SliderTrack.Position = UDim2.new(0, 20, 1, -20)
        SliderTrack.BackgroundColor3 = Theme.Surface2
        SliderTrack.BorderSizePixel = 0
        SliderTrack.Parent = Slider
        
        CreateCorner(SliderTrack, 3)
        
        local SliderFill = Instance.new("Frame")
        SliderFill.Size = UDim2.new(0, 0, 1, 0)
        SliderFill.Position = UDim2.new(0, 0, 0, 0)
        SliderFill.BackgroundColor3 = Theme.Primary
        SliderFill.BorderSizePixel = 0
        SliderFill.Parent = SliderTrack
        
        CreateCorner(SliderFill, 3)
        
        local SliderHandle = Instance.new("Frame")
        SliderHandle.Size = UDim2.new(0, 16, 0, 16)
        SliderHandle.Position = UDim2.new(0, -8, 0.5, -8)
        SliderHandle.BackgroundColor3 = Theme.Text
        SliderHandle.BorderSizePixel = 0
        SliderHandle.Parent = SliderTrack
        
        CreateCorner(SliderHandle, 8)
        CreateShadow(SliderHandle, 10, 0.5)
        
        local min = config.Min or 0
        local max = config.Max or 100
        local current = config.Default or min
        local dragging = false
        
        local function UpdateSlider(value)
            current = math.clamp(value, min, max)
            local percentage = (current - min) / (max - min)
            
            SliderValue.Text = tostring(math.floor(current * 10) / 10)
            
            TweenObject(SliderFill, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
                Size = UDim2.new(percentage, 0, 1, 0)
            })
            
            TweenObject(SliderHandle, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
                Position = UDim2.new(percentage, -8, 0.5, -8)
            })
            
            if config.Callback then
                config.Callback(current)
            end
        end
        
        SliderTrack.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                local percentage = math.clamp((input.Position.X - SliderTrack.AbsolutePosition.X) / SliderTrack.AbsoluteSize.X, 0, 1)
                UpdateSlider(min + (max - min) * percentage)
            end
        end)
        
        UserInputService.InputChanged:Connect(function(input)
            if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                local percentage = math.clamp((input.Position.X - SliderTrack.AbsolutePosition.X) / SliderTrack.AbsoluteSize.X, 0, 1)
                UpdateSlider(min + (max - min) * percentage)
            end
        end)
        
        UserInputService.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = false
            end
        end)
        
        UpdateSlider(current)
        
        TabPage.CanvasSize = UDim2.new(0, 0, 0, PageLayout.AbsoluteContentSize.Y)
        
        return Slider
    end
    
    function Tab:CreateTextbox(config)
        local Textbox = Instance.new("Frame")
        Textbox.Name = "Textbox_" .. (config.Name or "Textbox")
        Textbox.Size = UDim2.new(1, 0, 0, 70)
        Textbox.BackgroundColor3 = Theme.Surface
        Textbox.BorderSizePixel = 0
        Textbox.Parent = TabPage
        
        CreateCorner(Textbox, 8)
        CreateStroke(Textbox, Theme.Border, 1)
        
        local TextboxLabel = Instance.new("TextLabel")
        TextboxLabel.Size = UDim2.new(1, -20, 0, 25)
        TextboxLabel.Position = UDim2.new(0, 20, 0, 5)
        TextboxLabel.BackgroundTransparency = 1
        TextboxLabel.Text = config.Name or "Textbox"
        TextboxLabel.TextColor3 = Theme.Text
        TextboxLabel.TextScaled = true
        TextboxLabel.TextXAlignment = Enum.TextXAlignment.Left
        TextboxLabel.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium)
        TextboxLabel.Parent = Textbox
        
        local TextboxInput = Instance.new("TextBox")
        TextboxInput.Size = UDim2.new(1, -40, 0, 30)
        TextboxInput.Position = UDim2.new(0, 20, 1, -40)
        TextboxInput.BackgroundColor3 = Theme.Surface2
        TextboxInput.BorderSizePixel = 0
        TextboxInput.Text = config.Default or ""
        TextboxInput.PlaceholderText = config.PlaceholderText or "Enter text..."
        TextboxInput.TextColor3 = Theme.Text
        TextboxInput.PlaceholderColor3 = Theme.TextDim
        TextboxInput.TextScaled = true
        TextboxInput.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json")
        TextboxInput.Parent = Textbox
        
        CreateCorner(TextboxInput, 6)
        CreateStroke(TextboxInput, Theme.Border, 1)
        
        -- Focus effects
        TextboxInput.Focused:Connect(function()
            TweenObject(TextboxInput, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
                BackgroundColor3 = Theme.Primary
            })
        end)
        
        TextboxInput.FocusLost:Connect(function()
            TweenObject(TextboxInput, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
                BackgroundColor3 = Theme.Surface2
            })
            
            if config.Callback then
                config.Callback(TextboxInput.Text)
            end
        end)
        
        TabPage.CanvasSize = UDim2.new(0, 0, 0, PageLayout.AbsoluteContentSize.Y)
        
        return Textbox
    end
    
    function Tab:CreateDropdown(config)
        local Dropdown = Instance.new("Frame")
        Dropdown.Name = "Dropdown_" .. (config.Name or "Dropdown")
        Dropdown.Size = UDim2.new(1, 0, 0, 50)
        Dropdown.BackgroundColor3 = Theme.Surface
        Dropdown.BorderSizePixel = 0
        Dropdown.Parent = TabPage
        
        CreateCorner(Dropdown, 8)
        CreateStroke(Dropdown, Theme.Border, 1)
        
        local DropdownButton = Instance.new("TextButton")
        DropdownButton.Size = UDim2.new(1, 0, 1, 0)
        DropdownButton.BackgroundTransparency = 1
        DropdownButton.Text = ""
        DropdownButton.Parent = Dropdown
        
        local DropdownText = Instance.new("TextLabel")
        DropdownText.Size = UDim2.new(1, -60, 1, 0)
        DropdownText.Position = UDim2.new(0, 20, 0, 0)
        DropdownText.BackgroundTransparency = 1
        DropdownText.Text = config.Name or "Dropdown"
        DropdownText.TextColor3 = Theme.Text
        DropdownText.TextScaled = true
        DropdownText.TextXAlignment = Enum.TextXAlignment.Left
        DropdownText.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium)
        DropdownText.Parent = Dropdown
        
        local DropdownValue = Instance.new("TextLabel")
        DropdownValue.Size = UDim2.new(0, 100, 1, 0)
        DropdownValue.Position = UDim2.new(1, -120, 0, 0)
        DropdownValue.BackgroundTransparency = 1
        DropdownValue.Text = config.Default or "Select..."
        DropdownValue.TextColor3 = Theme.Primary
        DropdownValue.TextScaled = true
        DropdownValue.TextXAlignment = Enum.TextXAlignment.Right
        DropdownValue.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium)
        DropdownValue.Parent = Dropdown
        
        local DropdownArrow = Instance.new("TextLabel")
        DropdownArrow.Size = UDim2.new(0, 20, 1, 0)
        DropdownArrow.Position = UDim2.new(1, -30, 0, 0)
        DropdownArrow.BackgroundTransparency = 1
        DropdownArrow.Text = "▼"
        DropdownArrow.TextColor3 = Theme.TextSecondary
        DropdownArrow.TextScaled = true
        DropdownArrow.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json")
        DropdownArrow.Parent = Dropdown
        
        local DropdownList = Instance.new("Frame")
        DropdownList.Size = UDim2.new(1, 0, 0, 0)
        DropdownList.Position = UDim2.new(0, 0, 1, 5)
        DropdownList.BackgroundColor3 = Theme.Surface
        DropdownList.BorderSizePixel = 0
        DropdownList.Visible = false
        DropdownList.ZIndex = 10
        DropdownList.Parent = Dropdown
        
        CreateCorner(DropdownList, 8)
        CreateStroke(DropdownList, Theme.Border, 1)
        CreateShadow(DropdownList, 15, 0.6)
        
        local ListLayout = Instance.new("UIListLayout")
        ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        ListLayout.Parent = DropdownList
        
        local isOpen = false
        local selectedValue = config.Default
        
        local function CreateOption(option)
            local OptionButton = Instance.new("TextButton")
            OptionButton.Size = UDim2.new(1, 0, 0, 35)
            OptionButton.BackgroundColor3 = Theme.Surface
            OptionButton.BorderSizePixel = 0
            OptionButton.Text = ""
            OptionButton.Parent = DropdownList
            
            local OptionText = Instance.new("TextLabel")
            OptionText.Size = UDim2.new(1, -20, 1, 0)
            OptionText.Position = UDim2.new(0, 10, 0, 0)
            OptionText.BackgroundTransparency = 1
            OptionText.Text = option
            OptionText.TextColor3 = Theme.Text
            OptionText.TextScaled = true
            OptionText.TextXAlignment = Enum.TextXAlignment.Left
            OptionText.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json")
            OptionText.Parent = OptionButton
            
            AddHoverEffect(OptionButton, Theme.Surface2, Theme.Surface)
            
            OptionButton.MouseButton1Click:Connect(function()
                selectedValue = option
                DropdownValue.Text = option
                isOpen = false
                
                TweenObject(DropdownList, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
                    Size = UDim2.new(1, 0, 0, 0)
                }, function()
                    DropdownList.Visible = false
                end)
                
                TweenObject(DropdownArrow, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
                    Rotation = 0
                })
                
                if config.Callback then
                    config.Callback(option)
                end
            end)
        end
        
        for _, option in ipairs(config.Options or {}) do
            CreateOption(option)
        end
        
        DropdownButton.MouseButton1Click:Connect(function()
            isOpen = not isOpen
            
            if isOpen then
                DropdownList.Visible = true
                local listHeight = math.min(#(config.Options or {}) * 35, 200)
                
                TweenObject(DropdownList, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
                    Size = UDim2.new(1, 0, 0, listHeight)
                })
                
                TweenObject(DropdownArrow, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
                    Rotation = 180
                })
            else
                TweenObject(DropdownList, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
                    Size = UDim2.new(1, 0, 0, 0)
                }, function()
                    DropdownList.Visible = false
                end)
                
                TweenObject(DropdownArrow, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
                    Rotation = 0
                })
            end
        end)
        
        TabPage.CanvasSize = UDim2.new(0, 0, 0, PageLayout.AbsoluteContentSize.Y)
        
        return Dropdown
    end
    
    function Tab:CreateColorPicker(config)
        local ColorPicker = Instance.new("Frame")
        ColorPicker.Name = "ColorPicker_" .. (config.Name or "ColorPicker")
        ColorPicker.Size = UDim2.new(1, 0, 0, 50)
        ColorPicker.BackgroundColor3 = Theme.Surface
        ColorPicker.BorderSizePixel = 0
        ColorPicker.Parent = TabPage
        
        CreateCorner(ColorPicker, 8)
        CreateStroke(ColorPicker, Theme.Border, 1)
        
        local ColorText = Instance.new("TextLabel")
        ColorText.Size = UDim2.new(1, -80, 1, 0)
        ColorText.Position = UDim2.new(0, 20, 0, 0)
        ColorText.BackgroundTransparency = 1
        ColorText.Text = config.Name or "Color Picker"
        ColorText.TextColor3 = Theme.Text
        ColorText.TextScaled = true
        ColorText.TextXAlignment = Enum.TextXAlignment.Left
        ColorText.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium)
        ColorText.Parent = ColorPicker
        
        local ColorDisplay = Instance.new("Frame")
        ColorDisplay.Size = UDim2.new(0, 50, 0, 30)
        ColorDisplay.Position = UDim2.new(1, -65, 0.5, -15)
        ColorDisplay.BackgroundColor3 = config.Default or Theme.Primary
        ColorDisplay.BorderSizePixel = 0
        ColorDisplay.Parent = ColorPicker
        
        CreateCorner(ColorDisplay, 6)
        CreateStroke(ColorDisplay, Theme.Border, 2)
        
        local ColorButton = Instance.new("TextButton")
        ColorButton.Size = UDim2.new(1, 0, 1, 0)
        ColorButton.BackgroundTransparency = 1
        ColorButton.Text = ""
        ColorButton.Parent = ColorDisplay
        
        -- Simple color picker (could be expanded)
        local colors = {
            Color3.fromRGB(255, 100, 100),
            Color3.fromRGB(100, 255, 100),
            Color3.fromRGB(100, 100, 255),
            Color3.fromRGB(255, 255, 100),
            Color3.fromRGB(255, 100, 255),
            Color3.fromRGB(100, 255, 255),
            Color3.fromRGB(255, 255, 255),
            Color3.fromRGB(128, 128, 128)
        }
        
        local colorIndex = 1
        
        ColorButton.MouseButton1Click:Connect(function()
            colorIndex = colorIndex % #colors + 1
            local newColor = colors[colorIndex]
            
            TweenObject(ColorDisplay, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
                BackgroundColor3 = newColor
            })
            
            if config.Callback then
                config.Callback(newColor)
            end
        end)
        
        TabPage.CanvasSize = UDim2.new(0, 0, 0, PageLayout.AbsoluteContentSize.Y)
        
        return ColorPicker
    end
    
    return Tab
end

function Window:CreateNotification(config)
    local Notification = Instance.new("Frame")
    Notification.Name = "Notification"
    Notification.Size = UDim2.new(1, 0, 0, 80)
    Notification.BackgroundColor3 = Theme.Surface
    Notification.BorderSizePixel = 0
    Notification.Parent = NotificationContainer
    
    CreateCorner(Notification, 8)
    CreateStroke(Notification, Theme.BorderLight, 1)
    CreateShadow(Notification, 15, 0.6)
    
    -- Notification gradient
    CreateGradient(Notification, {
        ColorSequenceKeypoint.new(0, Color3.fromRGB(35, 35, 45)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(25, 25, 35))
    }, 90)
    
    local NotifIcon = Instance.new("TextLabel")
    NotifIcon.Size = UDim2.new(0, 40, 0, 40)
    NotifIcon.Position = UDim2.new(0, 15, 0.5, -20)
    NotifIcon.BackgroundTransparency = 1
    NotifIcon.Text = config.Icon or "ℹ"
    NotifIcon.TextColor3 = Theme.Primary
    NotifIcon.TextScaled = true
    NotifIcon.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold)
    NotifIcon.Parent = Notification
    
    local NotifTitle = Instance.new("TextLabel")
    NotifTitle.Size = UDim2.new(1, -70, 0, 25)
    NotifTitle.Position = UDim2.new(0, 60, 0, 10)
    NotifTitle.BackgroundTransparency = 1
    NotifTitle.Text = config.Title or "Notification"
    NotifTitle.TextColor3 = Theme.Text
    NotifTitle.TextScaled = true
    NotifTitle.TextXAlignment = Enum.TextXAlignment.Left
    NotifTitle.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold)
    NotifTitle.Parent = Notification
    
    local NotifContent = Instance.new("TextLabel")
    NotifContent.Size = UDim2.new(1, -70, 0, 35)
    NotifContent.Position = UDim2.new(0, 60, 0, 35)
    NotifContent.BackgroundTransparency = 1
    NotifContent.Text = config.Content or "Notification content"
    NotifContent.TextColor3 = Theme.TextSecondary
    NotifContent.TextScaled = true
    NotifContent.TextXAlignment = Enum.TextXAlignment.Left
    NotifContent.TextWrapped = true
    NotifContent.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json")
    NotifContent.Parent = Notification
    
    -- Slide in animation
    Notification.Position = UDim2.new(1, 0, 0, 0)
    TweenObject(Notification, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
        Position = UDim2.new(0, 0, 0, 0)
    })
    
    -- Auto-remove after duration
    local duration = config.Duration or 5
    task.wait(duration)
    
    TweenObject(Notification, TweenInfo.new(0.5, Enum.EasingStyle.Quad), {
        Position = UDim2.new(1, 0, 0, 0)
    }, function()
        Notification:Destroy()
    end)
end

function Window:Minimize()
    if minimized then return end
    minimized = true
    
    TweenObject(Main, TweenInfo.new(0.5, Enum.EasingStyle.Back), {
        Size = UDim2.new(0, 300, 0, 60)
    })
    
    ContentContainer.Visible = false
end

function Window:Restore()
    if not minimized then return end
    minimized = false
    
    TweenObject(Main, TweenInfo.new(0.5, Enum.EasingStyle.Back), {
        Size = UDim2.new(0, 800, 0, 600)
    })
    
    ContentContainer.Visible = true
end

function Window:Destroy()
    TweenObject(Main, TweenInfo.new(0.5, Enum.EasingStyle.Back), {
        Size = UDim2.new(0, 0, 0, 0)
    }, function()
        ScreenGui:Destroy()
    end)
end

-- Button Events
CloseButton.MouseButton1Click:Connect(function()
    Window:Destroy()
end)

MinimizeButton.MouseButton1Click:Connect(function()
    if minimized then
        Window:Restore()
    else
        Window:Minimize()
    end
end)

-- Library Functions
function SentenceRayfield:CreateWindow(config)
    Window:SetTitle(config.Name or "Sentence Rayfield")
    
    -- Show window with animation
    Main.Size = UDim2.new(0, 0, 0, 0)
    TweenObject(Main, TweenInfo.new(0.8, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
        Size = UDim2.new(0, 800, 0, 600)
    })
    
    return Window
end

function SentenceRayfield:Notify(config)
    task.spawn(function()
        Window:CreateNotification(config)
    end)
end

function SentenceRayfield:Destroy()
    Window:Destroy()
end

-- Keybind to toggle UI (Default: Insert)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == Enum.KeyCode.Insert then
        if Main.Visible then
            TweenObject(Main, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
                Position = UDim2.new(0.5, -400, 1.2, -300)
            }, function()
                Main.Visible = false
                Main.Position = UDim2.new(0.5, -400, 0.5, -300)
            end)
        else
            Main.Visible = true
            Main.Position = UDim2.new(0.5, -400, -0.2, -300)
            TweenObject(Main, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
                Position = UDim2.new(0.5, -400, 0.5, -300)
            })
        end
    end
end)

-- Example Usage:
--[[
local window = SentenceRayfield:CreateWindow({
    Name = "Example GUI"
})

local mainTab = window:CreateTab({
    Name = "Main",
    Icon = "🏠"
})

mainTab:CreateSection("Controls")

mainTab:CreateButton({
    Name = "Test Button",
    Callback = function()
        SentenceRayfield:Notify({
            Title = "Button Clicked!",
            Content = "This is a test notification.",
            Icon = "✓"
        })
    end
})

mainTab:CreateToggle({
    Name = "Enable Feature",
    Default = false,
    Callback = function(value)
        print("Toggle:", value)
    end
})

mainTab:CreateSlider({
    Name = "Speed",
    Min = 0,
    Max = 100,
    Default = 50,
    Callback = function(value)
        print("Slider:", value)
    end
})
]]

return SentenceRayfield
